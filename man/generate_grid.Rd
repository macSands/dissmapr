% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_grid.R
\name{generate_grid}
\alias{generate_grid}
\title{Generate Spatial Grid}
\usage{
generate_grid(
  data,
  x_col = "x",
  y_col = "y",
  grid_size = 0.5,
  sum_col_range = NULL,
  extra_cols = NULL,
  crs_epsg = 4326,
  unit = c("deg", "min", "sec", "m")
)
}
\arguments{
\item{data}{A data frame containing point data with x and y coordinates.}

\item{x_col}{Character. Column name for x-coordinates (default: "x").}

\item{y_col}{Character. Column name for y-coordinates (default: "y").}

\item{grid_size}{Numeric. Size of the grid cells. For geographic data (EPSG:4326) this is in degrees.}

\item{sum_col_range}{Numeric vector. Range of columns to summarize within each grid cell.}

\item{extra_cols}{Character vector of additional columns to retain in the output (optional).}

\item{crs_epsg}{Numeric. EPSG code for the coordinate reference system (default: 4326).}

\item{unit}{Character. One of "deg", "min", "sec", or "m". For geographic data use "deg" (default).}
}
\value{
A list containing:
\itemize{
\item \code{grid}: terra raster object of the generated grid with unique grid IDs.
\item \code{grid_sf}: sf object of the grid as polygons, with added centroid coordinates and (if applicable) mapsheet codes.
\item \code{block_sp}: Data frame summarizing grid cell contents (including extra_cols if provided).
}
}
\description{
This function generates a spatial grid over a geographic extent and assigns grid IDs to points.
It also computes cell centroids and, for geographic grids (in degrees or minutes), a mapsheet code.
Finally, it summarizes specified columns within each grid cell while preserving additional metadata
provided via \code{extra_cols}.
}
\examples{
set.seed(123)
data <- data.frame(
  x = runif(100, -10, 10),
  y = runif(100, -10, 10),
  species1 = rpois(100, 5),
  species2 = rpois(100, 3),
  recordedBy = sample(LETTERS, 100, replace = TRUE)
)
grid_result <- generate_grid(data, x_col = "x", y_col = "y",
                             grid_size = 1, sum_col_range = 3:4,
                             extra_cols = c("recordedBy"))
print(grid_result$block_sp)
plot(grid_result$grid_sf["grid_id"])
}
